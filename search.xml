<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git命令</title>
    <url>/2023/10/19/Git%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<ul>
<li><h4 id="创建分支并建立远程分支"><a href="#创建分支并建立远程分支" class="headerlink" title="创建分支并建立远程分支"></a>创建分支并建立远程分支</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout 分支名 <span class="comment">//基于哪个分支创建就切换到哪个分支</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> checkout -<span class="keyword">b</span> 分支名 <span class="comment">//创建本地分支并切换</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push</span> --set-upstream origin 分支名 <span class="comment">//连接远程并创建远程分支(直接使用跟本地分支同名的分支名)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="修改分支名"><a href="#修改分支名" class="headerlink" title="修改分支名"></a>修改分支名</h4><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git branch -m oldName newName</span></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="切换远程分支"><a href="#切换远程分支" class="headerlink" title="切换远程分支"></a>切换远程分支</h4><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">需要本地分支和远程分支建立映射关系</span><br><span class="line">git checkout -<span class="keyword">b </span>本地分支名xxx <span class="keyword">origin/远程分支名xxx</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">不需要本地分支和远程分支建立映射关系</span><br><span class="line">git fetch <span class="keyword">origin </span>远程分支名xxx:本地分支名xxx</span><br></pre></td></tr></table></figure>

</li>
<li><h4 id="回滚某次提交"><a href="#回滚某次提交" class="headerlink" title="回滚某次提交"></a>回滚某次提交</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">回滚到之前某一版本且该版本后的提交都不需要</span><br><span class="line">	首先使用git <span class="keyword">log</span>命令查看版本号(<span class="keyword">commit</span>后就是版本号)</span><br><span class="line">	git <span class="keyword">reset</span> <span class="comment">--hard 版本号 回滚到之前某版本，此时本地已经回滚，远程仓库还未回滚</span></span><br><span class="line">	git push -f 回滚远程仓库版本</span><br><span class="line"></span><br><span class="line">回滚到之前某一版本但该版本后的提交仍需保留</span><br><span class="line">    <span class="number">1</span>）首先使用git <span class="keyword">log</span>命令查看版本号(<span class="keyword">commit</span>后就是版本号)</span><br><span class="line">    <span class="number">2</span>）git revert -n 版本号回滚到之前版本</span><br><span class="line">    <span class="number">3</span>） git <span class="keyword">commit</span> &quot;备注信息&quot; 提交</span><br><span class="line">    <span class="number">4</span>）git push 推送至远程仓库</span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span>但未push  把修改撤销到工作区中</span><br><span class="line">	使用 git <span class="keyword">reset</span> <span class="comment">--soft HEAD^ 命令，撤销了commit 代码依然保留</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="修改最近一次commit的信息"><a href="#修改最近一次commit的信息" class="headerlink" title="修改最近一次commit的信息"></a>修改最近一次commit的信息</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">commit</span> <span class="comment">--amend</span></span><br><span class="line">git push <span class="operator">-</span>f</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/2023/10/24/MySQL/</url>
    <content><![CDATA[<h2 id="MySQL基础"><a href="#MySQL基础" class="headerlink" title="MySQL基础"></a>MySQL基础</h2><h3 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h3><h4 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h4><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">全称</th>
<th align="center">简称</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数据库</td>
<td align="center">存储数据的仓库,数据是有组织的进行存储</td>
<td align="center">DataBase(DB)</td>
</tr>
<tr>
<td align="center">数据库管理系统</td>
<td align="center">操作和管理数据库的大型软件</td>
<td align="center">DataBase Management System (DBMS)</td>
</tr>
<tr>
<td align="center">SQL</td>
<td align="center">操作关系型数据的编程语言,定义了一套操作关系数据库<strong>统一标准</strong></td>
<td align="center">Structured Query Language(SQL)</td>
</tr>
</tbody></table>
<ul>
<li><p>主流的关系型数据管理系统</p>
<ul>
<li>Oracle</li>
<li>MySQL</li>
<li>Microsoft SQL Server</li>
<li>PostgreSQL</li>
<li>IBM Db2</li>
<li>Microsoft Access</li>
<li>SQLite</li>
</ul>
</li>
<li><p>停止与启动(以管理员方式启动)</p>
<ul>
<li>启动: <code>net start mysql80</code></li>
<li>停止: <code>net stop mysql80</code></li>
</ul>
</li>
<li><p>客户端链接</p>
<ul>
<li>方式一: 启动MySQL命令工具(MySQL 8.0 Command Line Client)</li>
<li>方式二:系统自带的命令行工具执行命令: <code>mysql [-h  127.0.0.1] [-P 3306] -u root -p</code></li>
</ul>
</li>
<li><p>环境配置以及安装(<a href="https://blog.csdn.net/m0_63112274/article/details/130517120"></a>)</p>
<h4 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h4><ul>
<li><p>客户端操作MySQL数据库服务器</p>
<ul>
<li><p>客户端向MySQL数据库服务器发送SQL语句</p>
</li>
<li><p>MySQL数据库服务器中有DBMS(数据库管理系统)</p>
<ul>
<li><p>DBMS回去操作我们的数据库(不止一个)</p>
</li>
<li><p>数据库再去维护多张表(数据库中存储的数据)</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="关系型数据库-RDBMS"><a href="#关系型数据库-RDBMS" class="headerlink" title="关系型数据库(RDBMS)"></a>关系型数据库(RDBMS)</h4><blockquote>
<p>概念:建立在关系模型基础上,由多张相互连接的二位表组成的数据库</p>
<p>特点:</p>
<ol>
<li>使用表存储数据,格式统一,便于维护</li>
<li>使用SQL语言操作,标准统一,使用方便</li>
</ol>
</blockquote>
<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h4 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h4><ul>
<li>SQL通用语法<ol>
<li>SQL语句通常可以单行或多行书写,以分好结尾</li>
<li>SQL语句可以使用空格&#x2F;缩进来增强语句的可读性</li>
<li>MySQL数据库的SQL语句不区分大小写,关键字建议使用大写</li>
<li>注释:<ul>
<li>单行注释: <code>--</code>注释内容或<code>#</code>注释内容(MySQL等)</li>
<li>多行注释:<code> /*注释内容*/</code></li>
</ul>
</li>
</ol>
</li>
</ul>
<h4 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h4><table>
<thead>
<tr>
<th align="center">分类</th>
<th align="center">全称</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">DDL</td>
<td align="center">Data Definition Language</td>
<td align="center">数据定义语言,用来定义数据库对象(数据库,表,字段)</td>
</tr>
<tr>
<td align="center">DML</td>
<td align="center">Data Manipulation Language</td>
<td align="center">数据操作语言,用来对数据库表中的数据进行增删改</td>
</tr>
<tr>
<td align="center">DQL</td>
<td align="center">Data Query Language</td>
<td align="center">数据查询语言,用来查询数据库中表的记录</td>
</tr>
<tr>
<td align="center">DCL</td>
<td align="center">Data Control Language</td>
<td align="center">数据控制语言,用来创建数据库用户、控制数据库的访问权限</td>
</tr>
</tbody></table>
<h5 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h5><ul>
<li><p>DDL-数据库操作</p>
<ul>
<li><p>查询</p>
<ul>
<li><p>查询所有数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询当前数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DATABASE();</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>创建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集(utf8mb4)] [COLLATE 排序规则] ;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP DATABASE 数据库名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USE 数据库名;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>DDL-表操作-查询</p>
<ul>
<li><p>查询当前数据库所有表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询表结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DESC 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询指定表的建表语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW CREATE TABLE 表名;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>DDL-表操作-创建</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">CREATE <span class="selector-tag">TABLE</span> 表名(</span><br><span class="line">	字段<span class="number">1</span> 字段<span class="number">1</span>类型 <span class="selector-attr">[COMMET 字段1注释]</span>,</span><br><span class="line">	字段<span class="number">2</span> 字段<span class="number">2</span>类型 <span class="selector-attr">[COMMET 字段2注释]</span>,</span><br><span class="line">	字段<span class="number">3</span> 字段<span class="number">3</span>类型 <span class="selector-attr">[COMMET 字段3注释]</span>,</span><br><span class="line">	......</span><br><span class="line">	字段n 字段n类型 <span class="selector-attr">[COMMET 字段n注释]</span></span><br><span class="line">)<span class="selector-attr">[COMMET 表注释]</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>DDL-表操作-数据类型</p>
<blockquote>
<p>MySQL中的数据类型有很多,主要分为三类:数值类型、字符串类型、日期时间类型</p>
</blockquote>
<ul>
<li><p>数值类型</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th>大小</th>
<th align="center">有符号(SIGNED)范围</th>
<th align="center">无符号(UNSIGNED)范围</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">TINYINT</td>
<td>1byte</td>
<td align="center">(128,127)</td>
<td align="center">(0,255)</td>
<td align="center">小整数值</td>
</tr>
<tr>
<td align="center">SMALLINT</td>
<td>2byte</td>
<td align="center">(-32768,32767)</td>
<td align="center">(0,65535)</td>
<td align="center">大整数值</td>
</tr>
<tr>
<td align="center">MEDIUMINT</td>
<td>3byte</td>
<td align="center">(-8388608,8388607)</td>
<td align="center">(0,16777215)</td>
<td align="center">大整数值</td>
</tr>
<tr>
<td align="center">INT或INTEGER</td>
<td>4byte</td>
<td align="center">(-2147483648,2147483647)</td>
<td align="center">(0,4294967295)</td>
<td align="center">大整数值</td>
</tr>
<tr>
<td align="center">BIGINT</td>
<td>8byte</td>
<td align="center">(-2^63,2^63-1)</td>
<td align="center">(0,2^64-1)</td>
<td align="center">极大整数值</td>
</tr>
<tr>
<td align="center">FLOAT</td>
<td>4byte</td>
<td align="center">(-3.402823466  E+38,3.402823466351 E+38)</td>
<td align="center">0和(1.175494351 E-38 ,3.402823466 E+38)</td>
<td align="center">单精度浮点数值</td>
</tr>
<tr>
<td align="center">DOUBLE</td>
<td>8byte</td>
<td align="center">(-1.7976931348623157 E+308,1.7976931348623157 E+308)</td>
<td align="center">0和(2.2250738585072014 E-308,1.7976931348623157 E+308)</td>
<td align="center">双精度浮点值</td>
</tr>
<tr>
<td align="center">DECTMAL</td>
<td></td>
<td align="center">依赖于M(精度)和D(标度)的值</td>
<td align="center">依赖于M(精度)和D(标度)的值</td>
<td align="center">小数值(精确定点数)</td>
</tr>
</tbody></table>
</li>
<li><p>字符串类型</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th>大小</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CHAR</td>
<td>0-255 bytes</td>
<td align="center">定长字符串</td>
</tr>
<tr>
<td align="center">VARCHAR</td>
<td>0-65535 bytes</td>
<td align="center">变长字符串</td>
</tr>
<tr>
<td align="center">TINYBLOB</td>
<td>0-255 bytes</td>
<td align="center">不超过255个字符的二进制数据</td>
</tr>
<tr>
<td align="center">TINYTEXT</td>
<td>0-255 bytes</td>
<td align="center">短文本字符串</td>
</tr>
<tr>
<td align="center">BLOB</td>
<td>0-65 535 bytes</td>
<td align="center">二进制形式的长文本数据</td>
</tr>
<tr>
<td align="center">TEXT</td>
<td>0-65 535 bytes</td>
<td align="center">长文本数据</td>
</tr>
<tr>
<td align="center">MEDIUMBLOB</td>
<td>0-16 777 215 bytes</td>
<td align="center">二进制形式的中等长度文本数据</td>
</tr>
<tr>
<td align="center">MEDIUMTEXT</td>
<td>0-16 777 215 bytes</td>
<td align="center">中等长度文本数据</td>
</tr>
<tr>
<td align="center">LONGBLOB</td>
<td>0-4 294 967 295 bytes</td>
<td align="center">二进制形式的极大文本数据</td>
</tr>
<tr>
<td align="center">LONGTEXT</td>
<td>0-4 294 967 295 bytes</td>
<td align="center">极大文本数据</td>
</tr>
</tbody></table>
</li>
<li><p>日期类型</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th>大小</th>
<th align="center">范围</th>
<th align="center">格式</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">DATE</td>
<td>3</td>
<td align="center">1000-01-01 至 9999-12-31</td>
<td align="center">YYYY-MM-DD</td>
<td align="center">日期值</td>
</tr>
<tr>
<td align="center">HHHHTIME</td>
<td>3</td>
<td align="center">-838:59:59</td>
<td align="center">HH-MM-SS</td>
<td align="center">时间值或持续时间</td>
</tr>
<tr>
<td align="center">YEAR</td>
<td>1</td>
<td align="center">1901至2155</td>
<td align="center">YYYY</td>
<td align="center">年份值</td>
</tr>
<tr>
<td align="center">DATETIME</td>
<td>8</td>
<td align="center">1000-01-01 00:00:00 至 9999-12-31 23:59:59</td>
<td align="center">YYYY-MM-DD HH:MM:SS</td>
<td align="center">混合日期和时间</td>
</tr>
<tr>
<td align="center">TIMESTAMP</td>
<td>4</td>
<td align="center">1970-01-01 00:00:01 至 2038-1-19 03:14:07</td>
<td align="center">YYYY-MM-DD HH:MM:SS</td>
<td align="center">混合日期和时间值,时间戳</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><p>DDL-表操作-修改</p>
<ul>
<li><p>添加字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改数据类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改字段名和字段类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP 字段名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 RENAME TO 新表名;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>DDL-表操作-删除</p>
<ul>
<li><p>删除表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE [IF EXISTS] 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除指定表,并重新创建该表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRUNCATE TABLE 表名;</span><br><span class="line"></span><br><span class="line">注意:在删除表时,表中的全部数据也会被删除</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h5 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h5><ul>
<li><p>添加数据(INSERT)</p>
<ul>
<li><p>给指定字段添加数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名 (字段1,字段2,...) VALUES(值1,值2,...);</span><br></pre></td></tr></table></figure>
</li>
<li><p>给全部字段添加数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名 VALUES(值1,值2,...);</span><br></pre></td></tr></table></figure>
</li>
<li><p>批量添加数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名 (字段1,字段2,...) VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</span><br><span class="line"></span><br><span class="line">INSERT INTO 表名 VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>修改数据(UPDATE)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE 表名 SET 字段名1=值1,字段名2 =值2 ,...[WHERE 条件];</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除数据(DELETE)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM 表名 [where 条件]</span><br><span class="line"></span><br><span class="line">不能删除某个字段的数据(请使用update 值为null)</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h5><ul>
<li><p>DQL-执行顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表</span><br><span class="line">FROM 表名</span><br><span class="line">WhERE 条件列表</span><br><span class="line">GROUP BY 分组字段列表</span><br><span class="line">HAVING 分组后条件列表</span><br><span class="line">ORDER BY 排序字段列表</span><br><span class="line">LIMIT 分页参数 </span><br></pre></td></tr></table></figure>
</li>
<li><p>DQL-基本查询</p>
<ul>
<li><p>查询多个字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段1,字段2,字段3... FROM 表名;</span><br><span class="line">SELECT * FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段1 [AS 别名1],字段2 [AS 别名2] ... FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>去除重复记录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 字段列表 FROM 表名;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>DQL-条件查询</p>
<ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 WHERE 条件列表;</span><br></pre></td></tr></table></figure>
</li>
<li><p>条件</p>
<table>
<thead>
<tr>
<th align="center">比较运算符</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&gt;</td>
<td align="center">大于</td>
</tr>
<tr>
<td align="center">&gt;&#x3D;</td>
<td align="center">大于等于</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">小于</td>
</tr>
<tr>
<td align="center">&lt;&#x3D;</td>
<td align="center">小于等于</td>
</tr>
<tr>
<td align="center">&#x3D;</td>
<td align="center">等于</td>
</tr>
<tr>
<td align="center">&lt;&gt; 或 !&#x3D;</td>
<td align="center">不等于</td>
</tr>
<tr>
<td align="center">BETWEEN … AND …</td>
<td align="center">在某个范围之内(含最小\最大值)</td>
</tr>
<tr>
<td align="center">IN(…)</td>
<td align="center">在in之后的列表中的值,多选一</td>
</tr>
<tr>
<td align="center">LIKE 占位符(_)</td>
<td align="center">模糊匹配(匹配单个字符,%匹配任意个字符)</td>
</tr>
<tr>
<td align="center">IS NULL</td>
<td align="center">是NULL</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">逻辑运算符</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">AND 或 &amp;&amp;</td>
<td>并且(多个条件同时成立)</td>
</tr>
<tr>
<td align="center">OR 或 ||</td>
<td>或者(多个条件任意一个成立)</td>
</tr>
<tr>
<td align="center">NOT 或 !</td>
<td>非,不是</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><p>DQL-聚合函数</p>
<ol>
<li><p>讲一列数据作为一个整体进行纵向计算</p>
</li>
<li><p>常见的聚合函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">count</td>
<td align="center">统计数量</td>
</tr>
<tr>
<td align="center">max</td>
<td align="center">最大值</td>
</tr>
<tr>
<td align="center">min</td>
<td align="center">最小值</td>
</tr>
<tr>
<td align="center">avg</td>
<td align="center">平均值</td>
</tr>
<tr>
<td align="center">sum</td>
<td align="center">求和</td>
</tr>
</tbody></table>
</li>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 聚合函数(字段列表) FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意:null值不参与所有聚合函数运算</p>
</li>
</ol>
</li>
<li><p>DQL-分组查询</p>
<ol>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 [WHERE 条件] GROUP BY 分组字段名 [HAVING 分组后过滤条件];</span><br></pre></td></tr></table></figure>
</li>
<li><p>where 与 having 区别</p>
<ul>
<li>执行时机不同:where是分组之前进行过滤,不满足where条件,不参与分组;而having是分组之后对结果进行过滤</li>
<li>判断条件不同:where不能对聚合函数进行判断,而having可以</li>
</ul>
</li>
<li><p>注意:</p>
<ul>
<li>执行顺序:where &gt;聚合函数&gt;having</li>
<li>分组之后,查询的字段一般为聚合函数和分组字段,查询其他字段无任何意义</li>
</ul>
</li>
</ol>
</li>
<li><p>DQL-排序查询</p>
<ol>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1,字段2 排序方式2;</span><br></pre></td></tr></table></figure>
</li>
<li><p>排序方式</p>
<ul>
<li>ASC:升序(默认)</li>
<li>DESC:降序</li>
</ul>
</li>
<li><p>注意:如果是多字段排序,当第一个字段值相同时,才会根据第二个字段进行排序</p>
</li>
</ol>
</li>
<li><p>DQL-分页查询</p>
<ol>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 LIMIT 起始索引,查询记录数;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意:</p>
<ul>
<li>起始索引从0开始&#x3D;(查询页码-1)*每页显示记录数</li>
<li>分页查询是数据库的方言,不同的数据库有不同的实现,MySQL中是LIMIT</li>
<li>如果查询的是第一页数据,起始索引可以省略,直接简写为limit 10</li>
</ul>
</li>
</ol>
</li>
<li><p>DQL-执行顺序</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM 表名列表</span><br><span class="line">WHERE 条件列表</span><br><span class="line">GROUP BY 分组子段列表</span><br><span class="line">HAVING 分组后条件列表</span><br><span class="line">SELECT 字段列表</span><br><span class="line">ORDER BY 排序字段列表</span><br><span class="line">LIMIT 分页参数</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h5><ul>
<li><p>DCL-管理用户</p>
<ol>
<li><p>查询用户</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建用户</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名(%任意主机,localhost本机)&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改用户密码</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;新密码&#x27;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除用户</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意</p>
<ul>
<li>主机名可以使用%通配</li>
<li>这类SQL开发人员操作较少,主要是DBA(Database Administrator s数据库管理员)使用</li>
</ul>
</li>
</ol>
</li>
<li><p>DCL-权限控制</p>
<table>
<thead>
<tr>
<th align="center">权限(常用)</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ALL,ALL PRIVILEGES</td>
<td align="center">所有权限</td>
</tr>
<tr>
<td align="center">SELECT</td>
<td align="center">查询数据</td>
</tr>
<tr>
<td align="center">INSERT</td>
<td align="center">插入数据</td>
</tr>
<tr>
<td align="center">UPDATE</td>
<td align="center">修改数据</td>
</tr>
<tr>
<td align="center">DELETE</td>
<td align="center">删除数据</td>
</tr>
<tr>
<td align="center">ALTER</td>
<td align="center">修改表</td>
</tr>
<tr>
<td align="center">DROP</td>
<td align="center">删除数据库&#x2F;表&#x2F;视图</td>
</tr>
<tr>
<td align="center">CREATE</td>
<td align="center">创建数据库&#x2F;表</td>
</tr>
</tbody></table>
<ol>
<li><p>查询权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW GRANTS FOR &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>授予权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT 权限列表 ON 数据库名.表名 TO &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>撤销权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REVOKE 权限列表 ON 数据库名.表名 FROM &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意:</p>
<ul>
<li>多个权限之间,使用逗号分隔</li>
<li>授权时,数据库名和表名可以使用*进行通配,代表所有</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><blockquote>
<p>函数是指一段可以直接被另一段程序调用的程序和代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 函数(参数);</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li><p>字符串函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CONCAT(S1,S2,…,Sn)</td>
<td align="center">字符串拼接,将S1,S2,…,Sn拼接成一个字符串</td>
</tr>
<tr>
<td align="center">LOWER(str)</td>
<td align="center">将字符串str全部转为小写</td>
</tr>
<tr>
<td align="center">UPPER(str)</td>
<td align="center">将字符串str全部转为大写</td>
</tr>
<tr>
<td align="center">LPAD(str,n,pad)</td>
<td align="center">左填充,用字符串pad对str的左边进行填充,达到n个字符串长度</td>
</tr>
<tr>
<td align="center">RPAD(str,n,pad)</td>
<td align="center">右填充,用字符串pad对str的右边进行填充,达到n个字符串长度</td>
</tr>
<tr>
<td align="center">TRIM(str)</td>
<td align="center">去掉字符串头部和尾部的空格</td>
</tr>
<tr>
<td align="center">SUBSTRING(str,start,len)</td>
<td align="center">返回字符串str从start位置起的len个长度的字符串</td>
</tr>
</tbody></table>
</li>
<li><p>数值函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CEIL(x)</td>
<td align="center">向上去整</td>
</tr>
<tr>
<td align="center">FLOOR(x)</td>
<td align="center">向下取整</td>
</tr>
<tr>
<td align="center">MOD(x,y)</td>
<td align="center">返回x&#x2F;y的模</td>
</tr>
<tr>
<td align="center">RAND()</td>
<td align="center">返回0~1内的随机数</td>
</tr>
<tr>
<td align="center">ROUND(x,y)</td>
<td align="center">求参数x的四舍五入的值,保留y位小数</td>
</tr>
</tbody></table>
</li>
<li><p>日期函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CURDATE()</td>
<td align="center">返回当前日期</td>
</tr>
<tr>
<td align="center">CURTIME()</td>
<td align="center">返回当前时间</td>
</tr>
<tr>
<td align="center">NOW</td>
<td align="center">返回当前日期和时间</td>
</tr>
<tr>
<td align="center">YEAR(date)</td>
<td align="center">获取指定date的年份</td>
</tr>
<tr>
<td align="center">MONTH(date)</td>
<td align="center">获取date的月份</td>
</tr>
<tr>
<td align="center">DAY(date)</td>
<td align="center">获取指定date的日期</td>
</tr>
<tr>
<td align="center">DATE_ADD(date,INTERVAL expr type)</td>
<td align="center">返回一个日期&#x2F;时间值加上一个时间间隔expr后的时间值</td>
</tr>
<tr>
<td align="center">DATEDIFF(date1,date2)</td>
<td align="center">返回起始时间date1和结束时间date2之间的天数</td>
</tr>
</tbody></table>
</li>
<li><p>流程控制函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IF(value,t,f)</td>
<td align="center">如果value为true,则返回t,否则返回f</td>
</tr>
<tr>
<td align="center">IFNULL(value1,value2)</td>
<td align="center">如果value1不为空,则返回value1,否则返回value2</td>
</tr>
<tr>
<td align="center">CASE WHEN [val1] THEN [res1] … ELSE [default] END</td>
<td align="center">如果val1为true,返回res1,…否则返回default默认值</td>
</tr>
<tr>
<td align="center">CASE [expr] WHEN [val1] THEN [res1] … ELSE [default] END</td>
<td align="center">如果expr的值等于val1,返回res1, … 否则返回default默认值</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ol>
<li><p>概念:约束是作用于表中字段上的规则,用于存储在表中的数据</p>
</li>
<li><p>目的:保证数据库中的数据的正确、有效性和完整性</p>
</li>
<li><p>分类:</p>
<table>
<thead>
<tr>
<th>约束</th>
<th>描述</th>
<th>关键字</th>
</tr>
</thead>
<tbody><tr>
<td>非空约束</td>
<td>限制该字段的数据不能为null</td>
<td>NOT NULL</td>
</tr>
<tr>
<td>唯一约束</td>
<td>保证该字段的所有数据都是唯一、不重复的</td>
<td>UNIQUE</td>
</tr>
<tr>
<td>主键约束</td>
<td>主键是一行数据的唯一标识,要求非空且唯一</td>
<td>PRIMARY KEY</td>
</tr>
<tr>
<td>默认约束</td>
<td>保存数据时,如果未指定该字段的值,则采用默认值</td>
<td>DEFAULT</td>
</tr>
<tr>
<td>检查约束(8.0.16版本之后)</td>
<td>保证字段值满足某一个条件</td>
<td>CHECK</td>
</tr>
<tr>
<td>外键约束</td>
<td>用来让两张表的数据之间建立连接,保证数据的一致性和完整性</td>
<td>ROREGIN KEY</td>
</tr>
</tbody></table>
<p>注意:约束是作用于表中字段上的,可以在创建表&#x2F;修改表的时候添加约束</p>
</li>
</ol>
<h4 id="约束演示"><a href="#约束演示" class="headerlink" title="约束演示"></a>约束演示</h4><p>案例</p>
<table>
<thead>
<tr>
<th>字段名</th>
<th>字段含义</th>
<th>字段类型</th>
<th>约束条件</th>
<th>约束关键字</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>ID唯一标识</td>
<td>int</td>
<td>主键,并且自动增长</td>
<td>PRIMARY,AUTO_INCREMENT</td>
</tr>
<tr>
<td>name</td>
<td>姓名</td>
<td>varchar(10)</td>
<td>不为空,并且唯一</td>
<td>NOT NULL,UNIQUE</td>
</tr>
<tr>
<td>age</td>
<td>年龄</td>
<td>int</td>
<td>大于0,并且小于等于120</td>
<td>CHECK</td>
</tr>
<tr>
<td>status</td>
<td>状态</td>
<td>char(1)</td>
<td>如果没有指定该值,默认为1</td>
<td>DEFAULT</td>
</tr>
<tr>
<td>gender</td>
<td>性别</td>
<td>char(1)</td>
<td>无</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建表</span><br><span class="line">create table user&#123;</span><br><span class="line">id int primary key auto_increment comment &#x27;主键&#x27;,</span><br><span class="line">name varchar(10) not null unique comment &#x27;姓名&#x27;,</span><br><span class="line">age int check(age&gt;0 &amp;&amp; age&lt;=120) comment &#x27;年龄&#x27;,</span><br><span class="line">status char(1) default &#x27;1&#x27; comment &#x27;状态&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;</span><br><span class="line">&#125;comment &#x27;用户表&#x27;;</span><br><span class="line"></span><br><span class="line">#插入数据,id为主键且自增</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom&#x27;,19,&#x27;1&#x27;,&#x27;男&#x27;),(&#x27;Tom2&#x27;,25,&#x27;0&#x27;,&#x27;男&#x27;);</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom3&#x27;,19,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#name字段不能为null,违反非空约束</span><br><span class="line">insert into user(name,age,status,gender) value (null,19,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line"></span><br><span class="line">#已经存在Tom3,违反唯一约束</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom3&#x27;,19,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line"></span><br><span class="line">#值无效,检查约束</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom4&#x27;,80,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom5&#x27;,-1,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line">insert into user(name,age,status,gender) value (&#x27;Tom6&#x27;,124,&#x27;1&#x27;,&#x27;男&#x27;);</span><br><span class="line"></span><br><span class="line">#默认值</span><br><span class="line">insert into user(name,age,gender) value (&#x27;Tom4&#x27;,80,&#x27;男&#x27;);</span><br></pre></td></tr></table></figure>



<h4 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h4><blockquote>
<p>外键用来让两张表的数据之间建立连接,从而保存数据的一致性和完整性</p>
</blockquote>
<ul>
<li><p>语法</p>
<ul>
<li><p>添加外键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE 表名&#123;</span><br><span class="line">	字段名 数据类型,</span><br><span class="line">	...</span><br><span class="line">	[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表 (主表列名)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名);</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除外键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP  FOREIGN KEY 外键名称 ;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>删除&#x2F;更行行为</p>
<table>
<thead>
<tr>
<th>行为</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>NO ACTION</td>
<td>当在父表中删除&#x2F;更新对应记录时,首先检查该记录是否有对应外键,如果有则不允许删除&#x2F;更新。(与RESTRICT一致)</td>
</tr>
<tr>
<td>RESTRICT</td>
<td>当在父表中删除&#x2F;更新对应记录时,首先检查该记录是否有对应外键,如果有则不允许删除&#x2F;更新。(与 NO ACTION 一致)</td>
</tr>
<tr>
<td>CASCADE</td>
<td>当在父表中删除&#x2F;更新对应记录时,首先检查该记录是否有对应外键,如果有,则也删除&#x2F;更新外键在子表中的记录</td>
</tr>
<tr>
<td>SET NULL</td>
<td>当在父表中删除对应记录时,首先检查该记录是否有对应外键,如果有则设置子表中该外键值为null(这里要求该外键允许去null)</td>
</tr>
<tr>
<td>SET DEFAULT</td>
<td>父表有变更时,子表将外键列设置成一个默认的值(Innodb不支持)</td>
</tr>
</tbody></table>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名称 <span class="keyword">FOREIGN KEY</span>(外键字段名) <span class="keyword">REFERENCES</span> 主表( 主表列名) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span> <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><h5 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h5><ul>
<li><p>概述</p>
<blockquote>
<p>项目开发中,在进行数据库结构设计时,会根据业务需求及业务模块之间的关系,分析并设计表结构,由于业务之间相互关联,所以各个表之间也存在着各种联系,基本上分为三种</p>
</blockquote>
<ul>
<li><p>一对多(多对一)</p>
<ul>
<li>案例:部门 与 员工的关系</li>
<li>关系: 一个部门对应多个员工,一个员工对应对一个部门</li>
<li>实现:在多的一方建立外键,指向一的一方的主键</li>
</ul>
</li>
<li><p>多对多</p>
<ul>
<li><p>案例:学生与课程的关系</p>
</li>
<li><p>关系:一个学生可以选修多门课程,一门课程也可以供多个学生选择</p>
</li>
<li><p>实现:建立第三张中间表,中间表至少包含两个外键,分别关联两方主键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table student&#123;</span><br><span class="line">	id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">	name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">	no varchar(10) comment &#x27;学号&#x27;</span><br><span class="line">&#125; comment &#x27;学生表&#x27;;</span><br><span class="line">insert into student values (null,&#x27;黛绮丝&#x27;,&#x27;20001001001&#x27;),(null,&#x27;谢逊&#x27;,&#x27;20001001002&#x27;),(null,&#x27;殷天正&#x27;,&#x27;20001001003&#x27;),(null,&#x27;韦一笑&#x27;,&#x27;20001001004&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table course&#123;</span><br><span class="line">	id into auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">    name varchar(10) comment &#x27;课程名称&#x27;</span><br><span class="line">&#125;comment &#x27;课程表&#x27;;</span><br><span class="line">insert into course values (null,&#x27;Java&#x27;),(null,&#x27;PHP&#x27;),(null,&#x27;MySql&#x27;),(null,&#x27;Hadoop&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table student_course&#123;</span><br><span class="line">	id into auto_increment comment &#x27;主键&#x27; primary key,</span><br><span class="line">	studentid int not null comment &#x27;学生ID&#x27;,</span><br><span class="line">	courseid int not null comment &#x27;课程ID&#x27;,</span><br><span class="line">	constraint fk_courseid foreign (courseid) references course(id),</span><br><span class="line">	constraint fk_studentid foregin (studentid) references student(id)</span><br><span class="line">&#125;comment &#x27;学生中间表&#x27;;</span><br><span class="line">insert into student_course values (null,1,1),(null,1,2),(null,1,3),(null,2,2),(null,2,3),(null,3,4);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>一对一</p>
<ul>
<li><p>案例:用户与用户详情的关系</p>
</li>
<li><p>关系:一对一关系,多用于单表拆分,将一张表的基础字段放在一张表中,其他详情字段放在另一张表中,以提升操作效率</p>
</li>
<li><p>实现:在任意一方加入外键,关联另外一方的主键,并且设置外键为唯一的(UNIQUE)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tb_user&#123;</span><br><span class="line">	id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">    name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">    age int comment &#x27;年龄&#x27;,</span><br><span class="line">    gender char(1) comment &#x27;1:男 , 2:女&#x27;,</span><br><span class="line">    phone char(11) comment &#x27;手机号&#x27;,</span><br><span class="line">&#125;comment &#x27;用户基本信息表&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table tb_edu&#123;</span><br><span class="line">	id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">    degree varchar(20) comment &#x27;学历&#x27;,</span><br><span class="line">    major varchar(50) comment &#x27;专业&#x27;,</span><br><span class="line">    primaryschool varchar(50) comment &#x27;小学&#x27;,</span><br><span class="line">    middleschool varchar(50) comment &#x27;中学&#x27;,</span><br><span class="line">    university varchar(50) comment &#x27;大学&#x27;,</span><br><span class="line">    userid int unique comment &#x27;用户ID&#x27;,</span><br><span class="line">    constraint fk_userid foregin key (userid) references tb_user(id)</span><br><span class="line">&#125;comment &#x27;用户教育信息表&#x27;;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="多表查询概述"><a href="#多表查询概述" class="headerlink" title="多表查询概述"></a>多表查询概述</h5><ul>
<li><p>概述:</p>
<blockquote>
<p>指从多张表中查询数据</p>
</blockquote>
</li>
<li><p>笛卡尔积:笛卡尔乘积是指在数学中,两个集合A和集合B的所有组合情况(多表查询时,需要消除无效的笛卡尔积)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">消除笛卡尔积</span><br><span class="line">select * from emp,dept where emp.dept_id=dept.id;</span><br></pre></td></tr></table></figure>
</li>
<li><p>多表查询分类</p>
<ul>
<li>连接查询<ul>
<li>内链接:相当于查询A \B交集部分数据</li>
<li>外链接:<ul>
<li>左外连接:查询左表所有数据,以及两张表交集部分数据</li>
<li>右外连接:查询右表所有数据,以及两张表交集部分数据</li>
</ul>
</li>
<li>自连接:当前表与自身的链接查询,自连接必须使用表别名</li>
</ul>
</li>
<li>子查询</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">    id   <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;部门名称&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;部门表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">    id  <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age  <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    job <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">    salary <span class="type">int</span> comment <span class="string">&#x27;薪资&#x27;</span>,</span><br><span class="line">    entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">    managerid <span class="type">int</span> comment <span class="string">&#x27;直属领导ID&#x27;</span>,</span><br><span class="line">    dept_id <span class="type">int</span> comment <span class="string">&#x27;部门ID&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_dept_id <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span> dept(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (id, name) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;研发部&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;市场部&#x27;</span>),(<span class="number">3</span>, <span class="string">&#x27;财务部&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;销售部&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;总经办&#x27;</span>), (<span class="number">6</span>, <span class="string">&#x27;人事部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, name, age, job,salary, entrydate, managerid, dept_id) <span class="keyword">VALUES</span></span><br><span class="line">            (<span class="number">1</span>, <span class="string">&#x27;金庸&#x27;</span>, <span class="number">66</span>, <span class="string">&#x27;总裁&#x27;</span>,<span class="number">20000</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="keyword">null</span>,<span class="number">5</span>),</span><br><span class="line"></span><br><span class="line">            (<span class="number">2</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;项目经理&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2005-12-05&#x27;</span>, <span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">            (<span class="number">3</span>, <span class="string">&#x27;杨逍&#x27;</span>, <span class="number">33</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">8400</span>,<span class="string">&#x27;2000-11-03&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">            (<span class="number">4</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="number">48</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">11000</span>, <span class="string">&#x27;2002-02-05&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">            (<span class="number">5</span>, <span class="string">&#x27;常遇春&#x27;</span>, <span class="number">43</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">10500</span>, <span class="string">&#x27;2004-09-07&#x27;</span>, <span class="number">3</span>,<span class="number">1</span>),</span><br><span class="line">            (<span class="number">6</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;程序员鼓励师&#x27;</span>,<span class="number">6600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line"></span><br><span class="line">            (<span class="number">7</span>, <span class="string">&#x27;灭绝&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;财务总监&#x27;</span>,<span class="number">8500</span>, <span class="string">&#x27;2002-09-12&#x27;</span>, <span class="number">1</span>,<span class="number">3</span>),</span><br><span class="line">            (<span class="number">8</span>, <span class="string">&#x27;周芷若&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;会计&#x27;</span>,<span class="number">48000</span>, <span class="string">&#x27;2006-06-02&#x27;</span>, <span class="number">7</span>,<span class="number">3</span>),</span><br><span class="line">            (<span class="number">9</span>, <span class="string">&#x27;丁敏君&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;出纳&#x27;</span>,<span class="number">5250</span>, <span class="string">&#x27;2009-05-13&#x27;</span>, <span class="number">7</span>,<span class="number">3</span>),</span><br><span class="line"></span><br><span class="line">            (<span class="number">10</span>, <span class="string">&#x27;赵敏&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;市场部总监&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line">            (<span class="number">11</span>, <span class="string">&#x27;鹿杖客&#x27;</span>, <span class="number">56</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">3750</span>, <span class="string">&#x27;2006-10-03&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">            (<span class="number">12</span>, <span class="string">&#x27;鹤笔翁&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">3750</span>, <span class="string">&#x27;2007-05-09&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">            (<span class="number">13</span>, <span class="string">&#x27;方东白&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">5500</span>, <span class="string">&#x27;2009-02-12&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line"></span><br><span class="line">            (<span class="number">14</span>, <span class="string">&#x27;张三丰&#x27;</span>, <span class="number">88</span>, <span class="string">&#x27;销售总监&#x27;</span>,<span class="number">14000</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>,<span class="number">4</span>),</span><br><span class="line">            (<span class="number">15</span>, <span class="string">&#x27;俞莲舟&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;销售&#x27;</span>,<span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>,<span class="number">4</span>),</span><br><span class="line">            (<span class="number">16</span>, <span class="string">&#x27;宋远桥&#x27;</span>, <span class="number">40</span>, <span class="string">&#x27;销售&#x27;</span>,<span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>,<span class="number">4</span>),</span><br><span class="line">            (<span class="number">17</span>, <span class="string">&#x27;陈友谅&#x27;</span>, <span class="number">42</span>, <span class="keyword">null</span>,<span class="number">2000</span>, <span class="string">&#x27;2011-10-12&#x27;</span>, <span class="number">1</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>



<h5 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h5><p>内连接查询语法:</p>
<ul>
<li><p>隐式内连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表1,表2 WHERE 条件...;</span><br></pre></td></tr></table></figure>
</li>
<li><p>显式内连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表1 [INNER] JOIN 表2 ON 连接条件 ...; </span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h5><p>外连接查询语法:</p>
<ul>
<li><p>左外连接:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表1 LEFT [OUTER] JOIN 表2 ON 条件 ...;</span><br></pre></td></tr></table></figure>
</li>
<li><p>右外连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表1 RIGHT [OUTER] JOIN 表2 ON 条件 ...;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="自链接"><a href="#自链接" class="headerlink" title="自链接"></a>自链接</h5><p>自连接查询语法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名A ON 条件...;</span><br></pre></td></tr></table></figure>

<p><code>自连接查询,可以是内连接查询,也可以是外连接查询</code></p>
<h6 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询(union,union all)"></a>联合查询(union,union all)</h6><blockquote>
<p>对于union 查询,就是把多次查询的结果合并起来,形成一个新的查询结果</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表A ...</span><br><span class="line">UNION [ALL]</span><br><span class="line">SELECT 字段列表 FROM 表B ...;</span><br></pre></td></tr></table></figure>

<p><code>对于联合查询的多张表的列数必须保持一致,字段类型也需要保持一致</code></p>
<p><code>union all 会将全部都数据直接合并在一起,union会对合并之后的数据去重</code></p>
<h5 id="子链接"><a href="#子链接" class="headerlink" title="子链接"></a>子链接</h5><ul>
<li><p>概念:SQL语句中嵌套SELECT语句,称为嵌套查询,又称子查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM t1 WHERE column1 =(SELECT  column1 FROM t2);</span><br></pre></td></tr></table></figure>

<p><code>子查询外部的语句可是  INSERT /UPDATE/DELETE/SELECT 的任何一个</code></p>
</li>
<li><p>根据子查询结果不同,分为:</p>
<ul>
<li>标量子查询(子查询结果为单个值)</li>
<li>列子查询(子查询结果为一列)</li>
<li>行子查询(子查询结果为一行)</li>
<li>表子查询(子查询结果为多行多列)</li>
</ul>
</li>
<li><p>根据子查询位置,分为:WHERE之后,FROM之后,SELECT之后</p>
</li>
<li><p>标量查询</p>
<blockquote>
<p>子查询返回到结果是单个值(数字、字符串、日期等),最简单的形式,这种子查询称为标量子查询</p>
<p>常用的操作符: &#x3D;  &lt;&gt;  &gt;  &gt;&#x3D;  &lt;  &lt;&#x3D;</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查询&quot;销售部&quot;的所有员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id<span class="operator">=</span>(<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查詢指定入职日期之后入职的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span>(<span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;东方白&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>列子查询</p>
<blockquote>
<p>子查询返回的结果是一列(可以是多行),这种子查询称为列子查询</p>
<p>常用的操作符: IN 、NOT IN 、ANY 、SOME 、ALL</p>
</blockquote>
<table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>IN</td>
<td>在指定的集合范围之内,多选一</td>
</tr>
<tr>
<td>NOT IN</td>
<td>不在指定的集合范围之内</td>
</tr>
<tr>
<td>ANY</td>
<td>子查询返回列表中,有任意一个满足即可</td>
</tr>
<tr>
<td>SOME</td>
<td>与ANY等同,使用SOME的地方都可以使用ANY</td>
</tr>
<tr>
<td>ALL</td>
<td>子查询返回列表的所有值都必须满足</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查询<span class="string">&#x27;销售部&#x27;</span>和<span class="string">&#x27;市场部&#x27;</span>的所有员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;销售部&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;市场部&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查询 财务部 所有人员工资都高的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">all</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span>(<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span><span class="string">&#x27;财务部&#x27;</span>));</span><br><span class="line"></span><br><span class="line">#查询 比 研发部其中任意一人工资高的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span><span class="keyword">any</span>(<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>行子查询</p>
<blockquote>
<p>子查询返回到结果是一行(可以是多列),这种子查询称为行子查询</p>
<p>常用的操作符: &#x3D; 、&lt;&gt;、IN、NOT IN</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查询与 张无忌的薪资 与 直属领导相同 的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (salary,managerid)<span class="operator">=</span>(<span class="keyword">select</span> salary,managerid <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span><span class="string">&#x27; 张无忌&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>表子查询</p>
<blockquote>
<p>子查询返回的结果是多行多列,这种子查询称为表子查询</p>
<p>常用操作符: IN</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查询 与 &quot;鹿杖客&quot; &quot;宋远桥&quot; 的职位和薪资相同的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (job , salary) <span class="keyword">in</span> (<span class="keyword">select</span> job,salary <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;鹿杖客&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;宋远桥&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查询入职日期是 &quot;2006-01-01&quot;之后的员工信息,及其部门信息</span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>,d.<span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate<span class="operator">&gt;</span> <span class="string">&#x27;2006-01-01&#x27;</span>) e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span>d.id;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="多表查询案例"><a href="#多表查询案例" class="headerlink" title="多表查询案例"></a>多表查询案例</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> salgrade(</span><br><span class="line">    grade <span class="type">int</span>,</span><br><span class="line">    losal <span class="type">int</span>,</span><br><span class="line">    hisal <span class="type">int</span></span><br><span class="line">) comment <span class="string">&#x27;薪资等级表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">1</span>,<span class="number">0</span>,<span class="number">3000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">2</span>,<span class="number">3001</span>,<span class="number">5000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">3</span>,<span class="number">5001</span>,<span class="number">8000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">4</span>,<span class="number">8001</span>,<span class="number">10000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">5</span>,<span class="number">10001</span>,<span class="number">15000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">6</span>,<span class="number">15001</span>,<span class="number">20000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">7</span>,<span class="number">20001</span>,<span class="number">25000</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> salgrade <span class="keyword">values</span> (<span class="number">8</span>,<span class="number">25001</span>,<span class="number">30000</span>);</span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查询员工的姓名、年龄、职位、部门信息 （隐式内连接）</span><br><span class="line"><span class="comment">-- 表: emp , dept</span></span><br><span class="line"><span class="comment">-- 连接条件: emp.dept_id = dept.id</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.name , e.age , e.job , d.name <span class="keyword">from</span> emp e , dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"># 查询年龄小于<span class="number">30</span>岁的员工的姓名、年龄、职位、部门信息（显式内连接）</span><br><span class="line"><span class="comment">-- 表: emp , dept</span></span><br><span class="line"><span class="comment">-- 连接条件: emp.dept_id = dept.id</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.name , e.age,e.job.,d.name  <span class="keyword">from</span> emp e <span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">dept d <span class="keyword">on</span> e.dept_id<span class="operator">=</span>d.id <span class="keyword">where</span> e.age<span class="operator">&lt;</span><span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查询拥有员工的部门ID、部门名称</span><br><span class="line"><span class="comment">-- 表: emp , dept</span></span><br><span class="line"><span class="comment">-- 连接条件: emp.dept_id = dept.id</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> d.id ,d.name  <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id<span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"># 查询所有年龄大于<span class="number">40</span>岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来</span><br><span class="line"><span class="comment">-- 表: emp , dept</span></span><br><span class="line"><span class="comment">-- 连接条件: emp.dept_id = dept.id</span></span><br><span class="line"><span class="comment">-- 外连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>,d.name <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id<span class="operator">=</span>d.id <span class="keyword">where</span> e.age<span class="operator">&gt;</span><span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查询所有员工的工资等级</span><br><span class="line"><span class="comment">-- 表: emp , salgrade</span></span><br><span class="line"><span class="comment">-- 连接条件 : emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>,s.grade,s.losal,s.hisal <span class="keyword">from</span> emp e,salgrade s <span class="keyword">where</span> emp.salary <span class="operator">&gt;=</span> salgrade.losal <span class="keyword">and</span> emp.salary <span class="operator">&lt;=</span> salgrade.hisal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>,s.grade,s.losal,s.hisal <span class="keyword">from</span> emp e,salgrade s <span class="keyword">where</span> emp.salary <span class="keyword">between</span> salgrade.losal <span class="keyword">and</span> salgrade.hisal;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询 &quot;研发部&quot; 所有员工的信息及 工资等级</span><br><span class="line"><span class="comment">-- 表: emp , salgrade , dept</span></span><br><span class="line"><span class="comment">-- 连接条件 : emp.salary between salgrade.losal and salgrade.hisal , emp.dept_id = dept.id</span></span><br><span class="line"><span class="comment">-- 查询条件 : dept.name = &#x27;研发部</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e<span class="operator">*</span>,s.grade <span class="keyword">from</span> emp e, dept d ,salgrade s <span class="keyword">where</span> e.dept_id<span class="operator">=</span>d.id <span class="keyword">and</span> (e.salary <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal) <span class="keyword">and</span> d.name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 查询 &quot;研发部&quot; 员工的平均工资</span><br><span class="line"><span class="comment">-- 表: emp , dept</span></span><br><span class="line"><span class="comment">-- 连接条件 :  emp.dept_id = dept.id</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(e.salary) <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span>d.id <span class="keyword">and</span> d.name<span class="operator">=</span><span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#查询工资比 <span class="string">&#x27;灭绝&#x27;</span>高的员工信息</span><br><span class="line"><span class="comment">--a  查询&#x27;灭绝&#x27; 的薪资</span></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;灭绝&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--b  查询比他工资高的员工信息</span></span><br><span class="line"></span><br><span class="line">selct <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;灭绝&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查询比平均薪资高的员工信息</span><br><span class="line"><span class="comment">--a 查询员工的平均薪资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp ;</span><br><span class="line"></span><br><span class="line"><span class="comment">--b 查询比平均薪资高的员工信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary<span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line">#查询低于本部门平均工资的员工信息</span><br><span class="line"><span class="comment">-- a 查询指定部门平均薪资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(e1.salary) <span class="keyword">from</span> emp e1 <span class="keyword">where</span> e1.dept_id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(e1.salary) <span class="keyword">from</span> emp e1 <span class="keyword">where</span> e1.dept_id<span class="operator">=</span><span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b 查询低于本部门平均工资的员工信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e2 <span class="keyword">where</span> e2.salary <span class="operator">&lt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(e1.salary) <span class="keyword">from</span> emp e1 <span class="keyword">where</span> e1.dept_id<span class="operator">=</span>e2.dept_id);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询所有部门信息 ,并统计部门的员工人数</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> d.id ,d.name, (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp e <span class="keyword">where</span> e.dept_id <span class="operator">=</span>d.id)<span class="string">&#x27;人数&#x27;</span> <span class="keyword">from</span> dept d;</span><br><span class="line"></span><br><span class="line">#查询所有学生的选课情况,展示出学生名称,学号,课程名</span><br><span class="line"><span class="comment">--表:student course student_course</span></span><br><span class="line"><span class="comment">--链接条件: studetn.id= student_course.studentid , course.id =student_course.courseid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.name , s.no , c.name <span class="keyword">from</span> student s,student_course sc ,course c <span class="keyword">where</span> s.id<span class="operator">=</span>sc.studentid <span class="keyword">and</span> sc.courseid <span class="operator">=</span>c.id;</span><br></pre></td></tr></table></figure>



<h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><h4 id="事务简介"><a href="#事务简介" class="headerlink" title="事务简介"></a>事务简介</h4><blockquote>
<p>事务 是一组操作的集合,它是一个不可分割的工作单位,事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求,即这些操作要么同时成功,要么同时失败</p>
</blockquote>
<h4 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建表</span><br><span class="line">create table account &#123;</span><br><span class="line">	id int auto_increment primary key comment &#x27;主键ID&#x27;,</span><br><span class="line">	name varchar(10)comment &#x27;姓名&#x27;,</span><br><span class="line">	money int comment &#x27;余额&#x27;,</span><br><span class="line">&#125; comment &#x27;账户表&#x27;;</span><br><span class="line">insert into account(id,name,money) VALUES (null,&#x27;张三&#x27;,2000),(null,&#x27;李四&#x27;,2000);</span><br><span class="line">#恢复数据</span><br><span class="line">update account set money=2000 where name=&#x27;张三&#x27; or name =&#x27;李四&#x27;;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#手动提交</span><br><span class="line">select @@autocommit;</span><br><span class="line">set @@autocommit =1;</span><br><span class="line">#转账操作(张三给李四转账1000)</span><br><span class="line">--1. 查询张三账户余额</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">--2. 将张三账户余额-1000</span><br><span class="line">update account set money=money-1000 where name= &#x27;张三&#x27;;</span><br><span class="line"></span><br><span class="line">程序抛出异常</span><br><span class="line">--3. 将李四账户余额+1000</span><br><span class="line">update account set money=money+1000 where name= &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">#提交事务(事务正常)</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">#回滚事务(事务出现异常)</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">#方式二</span><br><span class="line">#转账操作(张三给李四转账1000)</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">--1. 查询张三账户余额</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">--2. 将张三账户余额-1000</span><br><span class="line">update account set money=money-1000 where name= &#x27;张三&#x27;;</span><br><span class="line"></span><br><span class="line">程序抛出异常</span><br><span class="line">--3. 将李四账户余额+1000</span><br><span class="line">update account set money=money+1000 where name= &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">#提交事务(事务正常)</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">#回滚事务(事务出现异常)</span><br><span class="line">rollback;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>查看&#x2F;设置事务提交方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT @@autocommit;</span><br><span class="line">SET @@autocommit=0; #手动提交</span><br></pre></td></tr></table></figure>
</li>
<li><p>提交事务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">COMMIT;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回滚事务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ROLLBACK;</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启事务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">START TRANSACTION 或 BEGIN;</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="事务四大特性"><a href="#事务四大特性" class="headerlink" title="事务四大特性"></a>事务四大特性</h4><ul>
<li>原子性(Atomicity):事务是不可分割单最小操作单元,要么全部成功,要么全部失败</li>
<li>一致性(Consistency):事务完成时,必须使所有的数据都保持一致状态</li>
<li>隔离性(Isolation):数据库系统提供的隔离机制,保证事务在不受外部并发操作影响的独立环境下运行</li>
<li>持久性(Durability):事务一旦提交或回滚,它对数据库中的数据的改变就是永久的</li>
</ul>
<h4 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h4><table>
<thead>
<tr>
<th>问题</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>脏读</td>
<td>一个事务</td>
</tr>
<tr>
<td>不可重复读</td>
<td>一个事务先后读取同一条记录,但两次读取的数据不同,称之为不可重复读</td>
</tr>
<tr>
<td>幻读</td>
<td>一个事务按照条件查询数据时,没有对应的数据行,但是在插入数据时,又发现这行数据已经存在,好像出现了”幻影”</td>
</tr>
</tbody></table>
<h4 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h4><table>
<thead>
<tr>
<th align="center">隔离级别</th>
<th align="center">脏读</th>
<th align="center">不可以重复读</th>
<th align="center">幻读</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Read uncommit</td>
<td align="center">✓</td>
<td align="center">✓</td>
<td align="center">✓</td>
</tr>
<tr>
<td align="center">Read committed</td>
<td align="center">×</td>
<td align="center">✓</td>
<td align="center">✓</td>
</tr>
<tr>
<td align="center">Repeatable Read(默认)</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">✓</td>
</tr>
<tr>
<td align="center">Serializable(串行化)</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--查看事务隔离级别</span><br><span class="line">SELECT @@TRANSACTION_ISOLATION;</span><br><span class="line">--设置事务隔离级别</span><br><span class="line">SET [SESSION|GLOBAL] TRANSACTION ISOLATION LEVEL [READ UNCOMMITTED | READ COMMITTED |REPEATABLE READ | SERIALIZABLE]</span><br></pre></td></tr></table></figure>

<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">#脏读(用cmd开启两个<span class="keyword">sql</span>窗口A,B,并使用同一个数据库)</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> <span class="keyword">uncommitted</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> <span class="type">money</span>=<span class="type">money</span><span class="number">-1000</span> <span class="keyword">where</span> <span class="type">name</span>=<span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line">#解决脏读</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> <span class="keyword">committed</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> <span class="type">money</span>=<span class="type">money</span><span class="number">-1000</span> <span class="keyword">where</span> <span class="type">name</span>=<span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#不可重复读</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> <span class="type">money</span>=<span class="type">money</span>+<span class="number">1000</span> <span class="keyword">where</span> <span class="type">name</span>=<span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#解决不可重复读</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">repeatable</span> <span class="keyword">read</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> <span class="type">money</span>=<span class="type">money</span>+<span class="number">1000</span> <span class="keyword">where</span> <span class="type">name</span>=<span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#幻读</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account <span class="keyword">where</span> id=<span class="number">3</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(id,<span class="type">name</span>,<span class="type">money</span>) <span class="keyword">value</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(id,<span class="type">name</span>,<span class="type">money</span>) <span class="keyword">value</span>(<span class="number">3</span>,<span class="string">&#x27;大刀王五&#x27;</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> account <span class="keyword">where</span> id=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line">#解决幻读</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">serializable</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> account <span class="keyword">where</span> id=<span class="number">4</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(id,<span class="type">name</span>,<span class="type">money</span>) <span class="keyword">value</span>(<span class="number">4</span>,<span class="string">&#x27;王五2&#x27;</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="comment">--A</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(id,<span class="type">name</span>,<span class="type">money</span>) <span class="keyword">value</span>(<span class="number">4</span>,<span class="string">&#x27;大刀王五&#x27;</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">--B</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure>

<p><code>注意:事务隔离级别越高,数据越安全,但性能越低</code></p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2023/11/11/Node/</url>
    <content><![CDATA[<h1 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h1><h2 id="Node核心"><a href="#Node核心" class="headerlink" title="Node核心"></a>Node核心</h2><h3 id="Node概述"><a href="#Node概述" class="headerlink" title="Node概述"></a>Node概述</h3><ul>
<li><p>什么是Node</p>
<ul>
<li><p>Node是一个JS的运行环境</p>
</li>
<li><p>它比浏览器拥有更多的能力</p>
<ul>
<li><p>浏览器中的JS</p>
<ul>
<li>JavaScript(EcmaScript&#x2F;Web Api)</li>
<li>Web Api 提供了操作浏览器窗口和页面的能力<ul>
<li>BOM</li>
<li>DOM</li>
<li>AJAX</li>
</ul>
</li>
<li>这种能力是非常有限的<ul>
<li>跨域问题</li>
<li>文件读写</li>
</ul>
</li>
</ul>
</li>
<li><p>Node中的JS</p>
<ul>
<li>NodeJS(EcmaScript&#x2F;Node API)</li>
<li>Node Api 几乎提供了所有能做的事</li>
</ul>
</li>
<li><p>分层结构对比</p>
<ul>
<li><p>JavaScript -&gt; 浏览器 -&gt; 操作系统 -&gt;计算机硬件(能做的事很少)<br>NodeJS -&gt; 浏览器 -&gt; 操作系统 -&gt;计算机硬件)能做很多事</p>
</li>
<li><p>浏览器提供了有限的能力,JS只能使用浏览器提供的功能做也有限的操作</p>
</li>
<li><p>Node提供了完整的控制计算机的能力</p>
<p>NodeJS几乎可以通过Node提供的接口,实现对整个操作系统的控制</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Node官网</p>
<p> <a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p>
</li>
<li><p>Node民间中文网</p>
<p> <a href="https://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a></p>
</li>
</ul>
</li>
<li><p>我们通常用Node干什么</p>
<ul>
<li><p>开发桌面应用程序</p>
</li>
<li><p>开发服务器应用程序</p>
<ul>
<li><p>结构1</p>
<ul>
<li><img src="https://gitee.com/tan-huaqing/drawing-bed/raw/master/imag/image-20231111153902990.png" alt="image-20231111153902990"></li>
<li>这种结构通常应用在微型的站点上</li>
<li>Node服务器完成请求的处理、响应、和数据库交互、各种业务逻辑</li>
</ul>
</li>
<li><p>结构2</p>
<ul>
<li><p><img src="https://gitee.com/tan-huaqing/drawing-bed/raw/master/imag/image-20231111154151375.png" alt="image-20231111154151375"></p>
</li>
<li><p>这种结构非常常见,应用在各种规模的站点上</p>
</li>
<li><p>Node服务器不做任何与业务逻辑有关的事情</p>
<p>绝大部分的时候,只是简单的转发请求<br>但可能会有一些额外的功能</p>
<ul>
<li>简单的信息记录<ul>
<li>请求日志</li>
<li>用户偏好</li>
<li>广告信息</li>
</ul>
</li>
<li>静态资源托管</li>
<li>缓存</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>前置课程</p>
<ul>
<li>网络通信</li>
<li>ES6</li>
<li>模块化</li>
<li>包管理器</li>
</ul>
</li>
</ul>
<h3 id="全局对象"><a href="#全局对象" class="headerlink" title="全局对象"></a>全局对象</h3><ul>
<li><p>setTimeout</p>
</li>
<li><p>setInterval</p>
</li>
<li><p>setImmediate</p>
<ul>
<li>类似于setTimeout  0</li>
</ul>
</li>
<li><p>console</p>
</li>
<li><p>__dirname</p>
<ul>
<li>获取当前模块所在目录</li>
<li>并非global属性</li>
</ul>
</li>
<li><p>__filename</p>
<ul>
<li>获取当前模块的文件路径</li>
<li>并非global属性</li>
</ul>
</li>
<li><p>Buffer</p>
<ul>
<li>类型化数组</li>
<li>继承自UInt8Array</li>
<li>计算机中存储的基本单位:字节</li>
</ul>
</li>
<li><p>process</p>
<ul>
<li>cwd()<ul>
<li>返回当前nodejs进程的工作目录</li>
<li>绝对路径</li>
</ul>
</li>
<li>exit()<ul>
<li>强制退出当前node进程</li>
<li>可传入退出码, 0表示成功退出,默认为0</li>
</ul>
</li>
<li>argv<ul>
<li>String[]</li>
<li>获取命令中所有参数</li>
</ul>
</li>
<li>platform<ul>
<li>获取当前的操作系统</li>
</ul>
</li>
<li>kill(pid)<ul>
<li>根据进程ID杀死进程</li>
</ul>
</li>
<li>env<ul>
<li>获取环境变量对象</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Node的模块化细节"><a href="#Node的模块化细节" class="headerlink" title="Node的模块化细节"></a>Node的模块化细节</h3><ul>
<li>模块的查找<ul>
<li>绝对路径<ul>
<li>根据绝对路径直接加载模块</li>
</ul>
</li>
<li>相对路径 .&#x2F; 或 ..&#x2F;<ul>
<li>相对于当前模块</li>
<li>转换为绝对路径</li>
<li>加载模块</li>
</ul>
</li>
<li>相对路径<ul>
<li>检查是否是内置模块,如:fs、path等</li>
<li>检查当前目录中的node_modules</li>
<li>检查上级目录中的node_modules</li>
<li>转换为绝对路径</li>
<li>加载模块</li>
</ul>
</li>
<li>关于后缀名<ul>
<li>如果不提供后缀名,自动补全</li>
<li>js、json、node、mjs</li>
</ul>
</li>
<li>关于文件名<ul>
<li>如果仅提供目录,不提供文件名,则自动寻找该目录中的index.js</li>
<li>package.json中的main字段<ul>
<li>表示包的默认入口</li>
<li>导入或执行包时若仅提供目录,则使用main补全入口</li>
<li>默认值为index.js</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>module对象</li>
<li>require函数</li>
<li>当执行一个模块或使用require时,会将模块放置在一个函数环境中</li>
</ul>
]]></content>
  </entry>
</search>
