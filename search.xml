<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git命令</title>
    <url>/2023/10/19/Git%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<ul>
<li><h4 id="创建分支并建立远程分支"><a href="#创建分支并建立远程分支" class="headerlink" title="创建分支并建立远程分支"></a>创建分支并建立远程分支</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout 分支名 <span class="comment">//基于哪个分支创建就切换到哪个分支</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> checkout -<span class="keyword">b</span> 分支名 <span class="comment">//创建本地分支并切换</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push</span> --set-upstream origin 分支名 <span class="comment">//连接远程并创建远程分支(直接使用跟本地分支同名的分支名)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="修改分支名"><a href="#修改分支名" class="headerlink" title="修改分支名"></a>修改分支名</h4><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git branch -m oldName newName</span></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="切换远程分支"><a href="#切换远程分支" class="headerlink" title="切换远程分支"></a>切换远程分支</h4><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">需要本地分支和远程分支建立映射关系</span><br><span class="line">git checkout -<span class="keyword">b </span>本地分支名xxx <span class="keyword">origin/远程分支名xxx</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">不需要本地分支和远程分支建立映射关系</span><br><span class="line">git fetch <span class="keyword">origin </span>远程分支名xxx:本地分支名xxx</span><br></pre></td></tr></table></figure>

</li>
<li><h4 id="回滚某次提交"><a href="#回滚某次提交" class="headerlink" title="回滚某次提交"></a>回滚某次提交</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">回滚到之前某一版本且该版本后的提交都不需要</span><br><span class="line">	首先使用git <span class="keyword">log</span>命令查看版本号(<span class="keyword">commit</span>后就是版本号)</span><br><span class="line">	git <span class="keyword">reset</span> <span class="comment">--hard 版本号 回滚到之前某版本，此时本地已经回滚，远程仓库还未回滚</span></span><br><span class="line">	git push -f 回滚远程仓库版本</span><br><span class="line"></span><br><span class="line">回滚到之前某一版本但该版本后的提交仍需保留</span><br><span class="line">    <span class="number">1</span>）首先使用git <span class="keyword">log</span>命令查看版本号(<span class="keyword">commit</span>后就是版本号)</span><br><span class="line">    <span class="number">2</span>）git revert -n 版本号回滚到之前版本</span><br><span class="line">    <span class="number">3</span>） git <span class="keyword">commit</span> &quot;备注信息&quot; 提交</span><br><span class="line">    <span class="number">4</span>）git push 推送至远程仓库</span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span>但未push  把修改撤销到工作区中</span><br><span class="line">	使用 git <span class="keyword">reset</span> <span class="comment">--soft HEAD^ 命令，撤销了commit 代码依然保留</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</li>
<li><h4 id="修改最近一次commit的信息"><a href="#修改最近一次commit的信息" class="headerlink" title="修改最近一次commit的信息"></a>修改最近一次commit的信息</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">commit</span> <span class="comment">--amend</span></span><br><span class="line">git push <span class="operator">-</span>f</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/2023/10/24/MySQL/</url>
    <content><![CDATA[<h2 id="MySQL基础"><a href="#MySQL基础" class="headerlink" title="MySQL基础"></a>MySQL基础</h2><h3 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h3><h4 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h4><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">全称</th>
<th align="center">简称</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数据库</td>
<td align="center">存储数据的仓库,数据是有组织的进行存储</td>
<td align="center">DataBase(DB)</td>
</tr>
<tr>
<td align="center">数据库管理系统</td>
<td align="center">操作和管理数据库的大型软件</td>
<td align="center">DataBase Management System (DBMS)</td>
</tr>
<tr>
<td align="center">SQL</td>
<td align="center">操作关系型数据的编程语言,定义了一套操作关系数据库<strong>统一标准</strong></td>
<td align="center">Structured Query Language(SQL)</td>
</tr>
</tbody></table>
<ul>
<li><p>主流的关系型数据管理系统</p>
<ul>
<li>Oracle</li>
<li>MySQL</li>
<li>Microsoft SQL Server</li>
<li>PostgreSQL</li>
<li>IBM Db2</li>
<li>Microsoft Access</li>
<li>SQLite</li>
</ul>
</li>
<li><p>停止与启动(以管理员方式启动)</p>
<ul>
<li>启动: <code>net start mysql80</code></li>
<li>停止: <code>net stop mysql80</code></li>
</ul>
</li>
<li><p>客户端链接</p>
<ul>
<li>方式一: 启动MySQL命令工具(MySQL 8.0 Command Line Client)</li>
<li>方式二:系统自带的命令行工具执行命令: <code>mysql [-h  127.0.0.1] [-P 3306] -u root -p</code></li>
</ul>
</li>
<li><p>环境配置以及安装(<a href="https://blog.csdn.net/m0_63112274/article/details/130517120"></a>)</p>
</li>
<li><p>数据模型</p>
<ul>
<li><p>客户端操作MySQL数据库服务器</p>
<ul>
<li><p>客户端向MySQL数据库服务器发送SQL语句</p>
</li>
<li><p>MySQL数据库服务器中有DBMS</p>
<ul>
<li><p>DBMS回去操作我们的数据库(不止一个)</p>
</li>
<li><p>数据库再去维护多张表(数据库中存储的数据)</p>
<p><img src="https://gitee.com/tan-huaqing/drawing-bed/raw/master/imag/image-20231024234802798.png" alt="image-20231024234802798"></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3>]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
</search>
